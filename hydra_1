Evaluate line SHIFT + ENTER
Evaluate bunch of code CTRL + ALT + ENTER

//PART 1
// COLORS AND OUTPUTS
//SOURCES (COLOR - BASIC ROUTING)
//(30m)(40)

// SOLID // COLORS (5m)(15)

solid( r, g, b, a )

r :: float (default 0.0)
g :: float (default 0.0)
b :: float (default 0.0)
a :: float (default 1.0)

solid(0.4,0.3,0.7).out(o0)
solid(1,0,0).out(o0)
solid(0,1,0).out(o0)
solid(0,0,5).out(o0)

solid().out(o0)
solid().out(o1)
solid().out(o2)
solid().out(o3)


//OUTPUT BUFFERS (5m)(20)
.out()

// MONITOR - RENDER BUFFER

render()

render(o0)
render(o1)
render(o2)
render(o3)

render(o2)

solid(0.4,0.3,0.7).out(o0)
solid(1,0,0).out(o1)
solid(0,1,0).out(o2)
solid(0,0,5).out(o3)


solid(0.4,0.3,0.7).out(o0)
solid(0.4,0.3,0.7).out(o1)
solid(0.4,0.3,0.7).out(o2)
solid(0.4,0.3,0.7).out(o3)


solid(0.4,0.3,0.7).out(o0)
solid(0.2,0.8,0.4).out(o1)
solid(0.3,0.1,0.2).out(o2)
solid(0.7,0.1,0.5).out(o3)

render()

// PT 2 (40m)(90)
//

// SOURCES (DYNAMIC TEXTURES)

// OSC (10m)(60)

// default(60Hz)
osc().out(o0)

// 1/2 speed
osc([30]).out(o0)

// 8Hz
osc(8).out(o0)

// PARAMETER SEQUENCES
// Lists as parameter sequences
osc([80, 100, 200, 50], 0.02 ).out(o0)

//[ , ]
// iterate 8/30Hz
osc([8,30]).out(o0)

// GRADIENT (5m)(65)
gradient().out(o0)

gradient(0.5).out(o0)

gradient(1).out(o0)

// gradient([1,2,4]).out(o0)
// gradient([0.51,0.002,20]).out(o0)
gradient([0.51,0.002,200]).out(o0)

gradient([0.5,0.25,0.5,0.25]).out(o0)

gradient([0.5,0.25,0.5,0.25]).invert([1,0,1,1,0.7,0.2]).out(o0)


//NOISE (5m)(70)

// (Perlin noise)
// noise( scale, offset )
    // scale :: int (default 10.0)
    // offset :: float (default 0.1)

noise().out()

// NOISE SCALE

//BASIC NOISE
noise(1).out()

//MORPHING SHAPES
noise(5).out()

//DYNAMIC TEXTURE
noise(50,0.07).out()

//COMPLEX TEXTURE
noise(300,0.3).out()

//A DYNAMIC GRADIANT
noise(0.35).out()

// A SECUENCE
noise([1,2,0.25]).out()

noise([1,2,0.5].fast(0.25)).out()

noise([1,0.25]).out()

noise([0.7,0.1,0.03]).out(o0)

noise(0.5,0.1,0.3).out(o0)

noise(0.5,0.1,0.3).scale(0.25)
.out(o0)


// NOISE OFFSET (speed)

noise().out(o0)

noise(1).out(o0)
// default
noise(1,0.1).out(o0)
// default x10
noise(1,1).out(o0)
// slow down
noise(1,0.03).out(o0)


noise([1,0.5,1,1.5,2],[0.5,1,2,4,8,16]).out(o0)


// VORONOI (RANDOM POLIGON TEXTURE) (5m)(75)

// voronoi( scale, speed, blending )
//(default 5),(default 0.3),(default 0.3)


voronoi(0.4)
.out()

// LESS BLENDING (sharper edges)
voronoi(1.8, 1.75, 0.1).out()

// MORE BLENDING (less contrast)
voronoi(1.8, 1.75, 2).out()
// .diff(o0).out()

// LESS BLENDING (negative shade reverses light)
voronoi(1.8, 1.75, -2).out()
